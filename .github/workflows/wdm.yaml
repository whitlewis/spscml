# This is a basic workflow to help you get started with Actions

name: deploy

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - main
      - jack-deploys
      - np-gpu-wdm-tanh

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  wdm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.HACKATHON_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.HACKATHON_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and tag app image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: hackathon
          IMAGE_TAG: wdm
        run: |
          # Write custom build steps to tesseract config
          cat << 'EOF' >> tesseracts/wdm/tesseract_config.yaml
          EOF
          
          # Debug: show final config
          echo "=== Final tesseract_config.yaml ==="
          cat tesseracts/wdm/tesseract_config.yaml
          echo "==================================="

          pip install tesseract-core
          tesseract --loglevel debug build tesseracts/wdm --tag $IMAGE_TAG
          docker tag wdm:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Push all images to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: hackathon
        run: |
          docker push --all-tags $ECR_REGISTRY/$ECR_REPOSITORY

      - name: Deploy to AWS ECS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.HACKATHON_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.HACKATHON_SECRET_ACCESS_KEY }}
        run: |
            pip install boto3
            python tesseracts/container_management.py --tesseract wdm
